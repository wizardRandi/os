// Non-premptive

#include <stdio.h>
int main() {
  int p[10], at[10], bt[10], st[10], et[10], tat[10], wt[10], i, j,
      temp = 0, no; // temp needed for sorting
  float avg_tat = 0, avg_wt = 0;

  // code to get total no of processes
  printf("Enter total no of processes: ");
  scanf("%d", &no);
  // code ends

  // code to get process no
  printf("\nEnter %d process:\n", no);
  for (i = 0; i < no; i++) {
    scanf("%d", &p[i]);
  }
  // code ends

  // code to get arrival time
  printf("\nEnter Arrival time: \n");
  for (i = 0; i < no; i++) {
    printf("p[%d]:", i + 1);
    scanf("%d", &at[i]);
  }
  // code ends

  // code to get burst time
  printf("\nEnter Burst time: \n");
  for (i = 0; i < no; i++) {
    printf("p[%d]:", i + 1);
    scanf("%d", &bt[i]);
  }
  // code ends

  // code to sort arrival time & burst time accordingly
  for (i = 0; i < no; i++) {
    for (j = 0; j < (no - i);
         j++) { // nested loop to compare process with next process
      if (at[j] > at[j + 1]) {
        temp = p[j + 1];
        p[j + 1] = p[j];
        p[j] = temp;

        temp = at[j + 1];
        at[j + 1] = at[j];
        at[j] = temp;

        temp = bt[j + 1];
        bt[j + 1] = bt[j];
        bt[j] = temp;
      }
    }
  }
  // code ends

  // code to calculate start time
  st[0] = at[0];
  for (i = 1; i < no; i++) {
    st[i] = bt[i - 1] + st[i - 1];
  }
  // code ends

  // code to calculate end time
  // first end time will be arrival time + burst time(only for 1st process)
  et[0] = at[0] + bt[0];
  // for remaining processes
  for (i = 1; i < no; i++) {
    temp = 0;
    if (et[i - 1] < at[i]) {
      temp = at[i] - et[i - 1];
    }
    et[i] = et[i - 1] + bt[i] + temp;
  }
  // code ends

  // code to calculate turn around & waiting time
  for (i = 0; i < no; i++) {
    tat[i] = et[i] - at[i];
    wt[i] = tat[i] - bt[i];
    avg_tat += tat[i];
    avg_wt += wt[i];
  }
  // calculating avg values
  avg_tat = avg_tat / no;
  avg_wt = avg_wt / no;
  // code ends

  // code to print final table
  printf("\np\t AT\t BT\t ST\t ET\t TAT\tWT");
  for (i = 0; i < no; i++) {
    printf("\nP%d\t %d\t %d\t %d\t %d \t\t %d \t\t %d", p[i], at[i], bt[i],
           st[i], et[i], tat[i], wt[i]);
  }
  printf("\naverage turn around time is %.2f\naverage wating time is %.2f",
         avg_tat, avg_wt);
  return 0;
}